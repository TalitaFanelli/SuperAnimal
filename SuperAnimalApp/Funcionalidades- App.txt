*Genérico
1. Todas as classes validam a conexão com a internet nos métodos onPreExecute / doInBackground da classe AsyncTask e geram a mensagem: "Ligue seu Wi-Fi ou dados móveis" se necessário
2. Se o retorno da Web Service for nulo, gera um erro específico para cada classe

-Classes
+Agendamento
1. DBO com Equal, toString e hashCode

+AgendamentoActivity
1. Botão + passa o CPF por parâmetro para a classe AgendamentoCreateActivity (caso seja criado um agendamento)
2. ListView: carrega os agendamentos do cliente. Se estiver vazio, gera a mensagem: "Nenhum agendamento encontrado"
3. Ao clicar no item, existe a possibilidade de deletar o agendamento


+AgendamentoCreateActivity 
1. Spinner: Data, Horário e Animal (dados criados no string-array)
2. Botão carrinho de compras: abre um Dialog com as opções de serviços (checkbox) - só é possível fechar a caixa se clicar no botão "ok"
3. TextView: exibe os serviços selecionados ou a mensagem "Nemhum serviço escolhido"
4. Total: soma o valor de todos os serviços selecionados
5. Botão salvar: valida se pelo menos 1 serviço foi selecionado. Caso não o contrário, gera a mensagem: "Insira pelo menos 1 serviço"
6. Botão lista: volta para a classe AgendamentoActivity passando o CPF por parâmetro


+AgendamentoJsonParser
1. Converte o Json recebido pela Web Service e instancia um objeto de Agendamento


+HttpManager
1. Copiada do exemplo passado no material


+LoginActivity
1. Campo CPF:
1.1. Gera mensagem "Campo Obrigatório" se for nulo
1.2. Possui máscara criada pela classe Mask, por isso só aceita números
1.3. Exige 14 caracteres digitados, caso o contrário gera a mensagem "Digite 14 números"
2. Campo Senha:
1.1. Gera mensagem "Campo Obrigatório" se for nulo
1.2. Possui tipo "password"
1.3. Exige 8 caracteres digitados, caso o contrário gera a mensagem "Digite 8 caracteres"
3. Botão Entrar:
3.1. Quando clicado, chama o método isOnline. Caso esteja sem conexão com a internet, gera uma mensagem específica e a classe AsyncTask retorna null sem acessar a Web Service
3.2. Caso tenha conexão com a internet, um Dialog com o ProgressBar é gerado e a Thread dorme por 3 segundos antes de continuar seu processamento.
4. Se o CPF não existir ou a senha estiver inválida gera a mensagem: "Usuário e ou senha inválidos"
5. Se o CPF e a senha forem válidos, a tela da classe AgendamentoActivity


*doInBackground único método obrigatório e não interage com o usuário